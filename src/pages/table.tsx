import { constants } from "buffer";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import InputHero from "~/components/InputHero";
import OutputHero from "~/components/OutputHero";

const Table: NextPage = () => {
  const [query, setQuery] = useState("");
  const [result, setResult] = useState([]);
  const [selectedOption, setSelectedOption] = useState("");
  const [outputReady, setOutputReady] = useState(false);
  const [isLoading, setIsLoading] = useState(false); // add isLoading state

  const options = [
    "people",
    "title",
    "actor",
    "CastMember",
    "Director",
    "titleGenre",
    "languages",
    "TitleType",
    "Ratings",
    "TvEpisode",
    "types",
    "writer",
    "genres",
  ]; // predefined options

  function handleOptionChange(event: any) {
    setSelectedOption(event.target.value);
    setOutputReady(false);
  }
  const handleSubmit = async (e: any) => {
    e.preventDefault();
    setIsLoading(true);
    const response = await fetch("/api/query", {
      method: "POST",
      body: JSON.stringify({ userInput: selectedOption }),
      headers: {
        "Content-Type": "application/json",
      },
    });
    const data = await response.json();
    setResult(data);
    setIsLoading(false);
    setOutputReady(true);
  };
  return (
    <>
      <Head>
        <title>Comp3380 Project</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="hero min-h-screen bg-base-200">
          <div className="hero-content text-center">
            <div className="max-w-md">
            <Link href={"/"}>
                <button className=" mb-5 btn-primary btn">
                  Go back 
                </button>
              </Link>
              <form onSubmit={handleSubmit}>
                <label>
                  Choose an option:
                  <select value={selectedOption} onChange={handleOptionChange}>
                    <option value="">--Select an option--</option>{" "}
                    {/* default blank option */}
                    {options.map((option) => (
                      <option key={option} value={option}>
                        {option}
                      </option>
                    ))}
                  </select>
                </label>
                <p>You have selected: {selectedOption}</p>
                <button className="btn" type="submit">
                  Get table
                </button>
              </form>
              
              {isLoading && <p>Loading...</p>}{" "}
              {/* display "Loading..." when isLoading is true */}
              {outputReady && (
                <p className="mt-4 text-green-500">
                  Output is ready. scroll down!
                </p>
              )}
            </div>
          </div>
        </div>
        <OutputHero result={result} />
      </main>
    </>
  );
};

export default Table;
